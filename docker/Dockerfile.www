FROM --platform=$TARGETPLATFORM node:18-slim as build-stage

# 
# 1. build the landing page as static files
# 2. run nginx to serve the static files
# 

# https://docs.docker.com/build/building/multi-platform/
ARG BUILDPLATFORM
ARG TARGETPLATFORM
RUN echo "I am running on $BUILDPLATFORM, building for $TARGETPLATFORM"

# nginx port
ENV HTTP_PORT=${SUBLEDGR_WWW_PORT:-8080}

# we need python + gcc to compile gyp
RUN apt update \
  && apt install -y curl python3 gcc

WORKDIR /
COPY www /app
WORKDIR /app

# RUN npm install -g yarn \
#   && yarn install
RUN yarn install && yarn build

FROM --platform=$TARGETPLATFORM nginx as deploy-stage

COPY --from=build-stage /app/dist/. /usr/share/nginx/html/
COPY docker/etc/nginx/nginx.conf /etc/nginx/nginx.conf
# # COPY docker/nginx-default.conf /etc/nginx/conf.d/default.conf
COPY docker/etc/nginx/www-default.conf.template /etc/nginx/templates/default.conf.template
COPY docker/etc/nginx/www-entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
#   CMD curl -f http://localhost:$PORT/version || exit 1

EXPOSE ${HTTP_PORT}

# CMD [ "yarn", "dev" ]
# CMD [ "http-server", "dist", "--proxy", "http://localhost:8080?", "--proxy-options" ]
# CMD ["nginx", "-g", "daemon off;"]
CMD [ "/entrypoint.sh" ]
